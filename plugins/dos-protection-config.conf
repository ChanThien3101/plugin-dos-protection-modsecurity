# ------------------------------------------------------------------------
# CRS Plugin
#
# The OWASP CRS plugins are distributed under
# Apache Software License (ASL) version 2
# Please see the enclosed LICENSE file for full details.
# ------------------------------------------------------------------------

# Plugin name: dos-protection
# Plugin description: Anti-automation rules to detect denial of service attacks
# Rule ID block base: 9,514,000 - 9,514,999
# Plugin version: 1.1.0

# Documentation can be found here:
# https://github.com/ChanThien3101/plugin-dos-protection-modsecurity.git



# Generic rule to disable plugin
SecRule TX:dos-protection-plugin_enabled "@eq 0" "id:9514099,phase:1,pass,nolog,ctl:ruleRemoveById=9514100-9514999"


#
# Description of mechanics:
# When a request hits a non-static resource (TX:STATIC_EXTENSIONS), then a counter for the IP
# address is being raised (IP:DOS_COUNTER). If the counter (IP:DOS_COUNTER) hits a limit
# (TX:DOS_COUNTER_THRESHOLD), then a burst is identified (IP:DOS_BURST_COUNTER) and the
# counter (IP:DOS_COUNTER) is reset. The burst counter expires within a timeout period
# (TX:DOS_BURST_TIME_SLICE).
#
# If the burst counter (IP:DOS_BURST_COUNTER) is greater than or equal to 2, 
# the blocking flag (`IP:DOS_BLOCK_IP`) will be set. The blocking flag (`IP:DOS_BLOCK_IP`) 
# will expire after a timeout period (`TX:DOS_BLOCK_TIMEOUT`). Subsequently, 
# ModSecurity will invoke a Lua script to add the IP address to the blockListIP.txt file so that 
# the IP can be blocked during the next access attempt. This entire process takes place in phase 5.
#
# The blocking is executed in phase 1: When an IP attempts to connect to the server, 
# if the Lua script detects that the IP exists in the blockListIP.txt file, the IP will be blocked. 
# At the same time, the request will be dropped without sending any response
#
# Variables:
# IP:DOS_BLOCK_IP           Flag if an IP address should be blocked
# IP:DOS_BURST_COUNTER      Burst counter
# IP:DOS_COUNTER            Request counter (static resources are ignored)
# TX:DOS_BLOCK_TIMEOUT      Period in seconds a blocked IP will be blocked
# TX:DOS_COUNTER_THRESHOLD  Limit of requests, where a burst is identified
# TX:DOS_BURST_TIME_SLICE   Period in seconds when we will forget a burst
# TX:STATIC_EXTENSIONS      Paths which can be ignored with regards to DoS
#
# As a precondition for these rules, please set the following three variables:
#  - TX:DOS_BLOCK_TIMEOUT
#  - TX:DOS_COUNTER_THRESHOLD
#  - TX:DOS_BURST_TIME_SLICE
#
# And make sure that TX:STATIC_EXTENSIONS is also set.
#

#
# -= Paranoia Level 0 (empty) =- (apply unconditionally)
#


#
# -=[ Anti-Automation / DoS Protection : Block ]=-
#

#
# Use Lua script to dynamically check the blocklist
#
SecRuleScript "/etc/apache2/modsecurity.d/owasp-crs/plugins/plugin-dos-protection-modsecurity/plugins/get_blocklist_ip.lua" \
    "id:9514920,\
    phase:1,\
    drop,\
    msg:'Blocked IP %{REMOTE_ADDR} found in blocklist via Lua script, block initiated',\
    nolog,\
    ver:'dos-protection-plugin/1.1.0',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'paranoia-level/1',\
    tag:'attack-dos',\
    tag:'OWASP_CRS'"



#
# Skip if variables defining DoS protection are not set
#
SecRule &TX:dos_burst_time_slice "@eq 0" \
    "id:9514100,\
    phase:1,\
    pass,\
    t:none,\
    nolog,\
    ver:'dos-protection-plugin/1.1.0',\
    chain,\
    skipAfter:END-DOS-PROTECTION-CHECKS"
    SecRule &TX:dos_counter_threshold "@eq 0" \
        "chain"
        SecRule &TX:dos_block_timeout "@eq 0"

SecRule &TX:dos_burst_time_slice "@eq 0" \
    "id:9514110,\
    phase:5,\
    pass,\
    t:none,\
    nolog,\
    ver:'dos-protection-plugin/1.1.0',\
    chain,\
    skipAfter:END-DOS-PROTECTION-CHECKS"
    SecRule &TX:dos_counter_threshold "@eq 0" \
        "chain"
        SecRule &TX:dos_block_timeout "@eq 0"


SecRule TX:EXECUTING_PARANOIA_LEVEL "@lt 1" "id:9514011,phase:1,pass,nolog,skipAfter:END-REQUEST-9514-DOS-PROTECTION"
SecRule TX:EXECUTING_PARANOIA_LEVEL "@lt 1" "id:9514012,phase:2,pass,nolog,skipAfter:END-REQUEST-9514-DOS-PROTECTION"
#
# -= Paranoia Level 1 (default) =- (apply only when tx.executing_paranoia_level is sufficiently high: 1 or higher)
#

#
# -=[ Anti-Automation / DoS Protection: Count requests ]=-
#

#
# Skip if we have blocked the request
#
SecRule IP:DOS_BLOCK_IP "@eq 1" \
    "id:9514140,\
    phase:5,\
    pass,\
    t:none,\
    nolog,\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'paranoia-level/1',\
    tag:'attack-dos',\
    ver:'dos-protection-plugin/1.1.0',\
    skipAfter:END-DOS-PROTECTION-CHECKS"


#
# DOS Counter: Count the number of requests to non-static resources
#
SecRule REQUEST_BASENAME "@rx .*?(\.[a-z0-9]{1,10})?$" \
    "id:9514150,\
    phase:5,\
    pass,\
    capture,\
    t:none,t:lowercase,\
    nolog,\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'paranoia-level/1',\
    tag:'attack-dos',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/210/227/469',\
    ver:'dos-protection-plugin/1.1.0',\
    setvar:'tx.extension=/%{TX.1}/',\
    chain"
    SecRule TX:EXTENSION "!@within %{tx.static_extensions}" \
        "setvar:'ip.dos_counter=+1'"


#
# Check DOS Counter
# If the request count is greater than or equal to user settings,
# we raise the burst counter. This happens via two separate rules:
# - 9514160: raise from 0 to 1
# - 9514161: raise from 1 to 2
#
# This approach with two rules avoids raising the burst counter
# from 0 to 2 via two concurrent requests. We do not raise the
# burst counter beyond 2.
#
#


SecRule IP:DOS_COUNTER "@ge %{tx.dos_counter_threshold}" \
    "id:9514160,\
    phase:5,\
    pass,\
    t:none,\
    nolog,\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'paranoia-level/1',\
    tag:'attack-dos',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/210/227/469',\
    ver:'dos-protection-plugin/1.1.0',\
    chain"
    SecRule &IP:DOS_BURST_COUNTER "@eq 0" \
        "setvar:'ip.dos_burst_counter=1',\
        setvar:'!ip.dos_counter',\
        expirevar:'ip.dos_burst_counter=%{tx.dos_burst_time_slice}'"


SecRule IP:DOS_COUNTER "@ge %{tx.dos_counter_threshold}" \
    "id:9514161,\
    phase:5,\
    pass,\
    t:none,\
    nolog,\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'paranoia-level/1',\
    tag:'attack-dos',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/210/227/469',\
    ver:'dos-protection-plugin/1.1.0',\
    chain"
    SecRule &IP:DOS_BURST_COUNTER "@ge 1" \
        "setvar:'ip.dos_burst_counter=2',\
        setvar:'!ip.dos_counter',\
        expirevar:'ip.dos_burst_counter=%{tx.dos_burst_time_slice}'"


#
# Check DOS Burst Counter and set Block
# Check the burst counter - if greater than or equal to 2, then we set the IP
# block variable for a given expiry and issue an alert.
#
SecRule IP:DOS_BURST_COUNTER "@ge 2" \
    "id:9514170,\
    phase:5,\
    pass,\
    t:none,\
    msg:'Potential Denial of Service (DoS) Attack from %{remote_addr} - # of Request Bursts: %{ip.dos_burst_counter} - IP has been added to the ip blocklist',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'paranoia-level/1',\
    tag:'attack-dos',\
    tag:'OWASP_CRS',\
    tag:'capec/1000/210/227/469',\
    ver:'dos-protection-plugin/1.1.0',\
    setvar:'ip.dos_block_ip=1',\
    expirevar:'ip.dos_block_ip=%{tx.dos_block_timeout}',\
    exec:/etc/apache2/modsecurity.d/owasp-crs/plugins/plugin-dos-protection-modsecurity/plugins/save_ip_to_blocklist.lua"




SecRule TX:EXECUTING_PARANOIA_LEVEL "@lt 2" "id:9514013,phase:1,pass,nolog,skipAfter:END-REQUEST-9514-DOS-PROTECTION"
SecRule TX:EXECUTING_PARANOIA_LEVEL "@lt 2" "id:9514014,phase:2,pass,nolog,skipAfter:END-REQUEST-9514-DOS-PROTECTION"
SecRule TX:EXECUTING_PARANOIA_LEVEL "@lt 2" "id:9514019,phase:5,pass,nolog,skipAfter:END-REQUEST-9514-DOS-PROTECTION"
#
# -= Paranoia Level 2 =- (apply only when tx.executing_paranoia_level is sufficiently high: 2 or higher)
#

#
# Check DOS Burst Counter and set Block
# Check the burst counter - if greater than or equal to 1, then we set the IP
# block variable for a given expiry and issue an alert.
#
# This is a stricter sibling of rule 9514170.
#
# SecRule IP:DOS_BURST_COUNTER "@ge 1" \
#     "id:9514171,\
#     phase:5,\
#     pass,\
#     t:none,\
#     msg:'Potential Denial of Service (DoS) Attack from %{tx.real_ip} - # of Request Bursts: %{ip.dos_burst_counter}',\
#     tag:'application-multi',\
#     tag:'language-multi',\
#     tag:'platform-multi',\
#     tag:'attack-dos',\
#     tag:'paranoia-level/2',\
#     tag:'OWASP_CRS',\
#     tag:'capec/1000/210/227/469',\
#     ver:'dos-protection-plugin/1.1.0',\
#     setvar:'ip.dos_block_ip=1',\
#     expirevar:'ip.dos_block_ip=%{tx.dos_block_timeout}'"



SecRule TX:EXECUTING_PARANOIA_LEVEL "@lt 3" "id:9514015,phase:1,pass,nolog,skipAfter:END-REQUEST-9514-DOS-PROTECTION"
SecRule TX:EXECUTING_PARANOIA_LEVEL "@lt 3" "id:9514016,phase:2,pass,nolog,skipAfter:END-REQUEST-9514-DOS-PROTECTION"
#
# -= Paranoia Level 3 =- (apply only when tx.executing_paranoia_level is sufficiently high: 3 or higher)
#

SecRule TX:EXECUTING_PARANOIA_LEVEL "@lt 4" "id:9514017,phase:1,pass,nolog,skipAfter:END-REQUEST-9514-DOS-PROTECTION"
SecRule TX:EXECUTING_PARANOIA_LEVEL "@lt 4" "id:9514018,phase:2,pass,nolog,skipAfter:END-REQUEST-9514-DOS-PROTECTION"
#
# -= Paranoia Level 4 =- (apply only when tx.executing_paranoia_level is sufficiently high: 4 or higher)
#

#
# -= Paranoia Levels Finished =-
#
SecMarker "END-REQUEST-9514-DOS-PROTECTION"

SecMarker "END-DOS-PROTECTION-CHECKS"
